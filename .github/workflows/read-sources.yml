name: Read Sources

on:
  workflow_dispatch:
jobs:
  readsources:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install poetry
        poetry install

    - name: Checkout remote repository (dnsReaper)
      uses: actions/checkout@v3
      with:
        repository: punk-security/dnsReaper
        path: dnsReaper 

    - name: Checkout remote repository (nuclei-templates)
      uses: actions/checkout@v3
      with:
        repository: projectdiscovery/nuclei-templates
        path: nuclei-templates

    - name: Read Sources
      run: |
        poetry run python3 baddns/scripts/readsources.py

    - name: Stage, commit, and create PR for changed files
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "starting Read Sources run" >> readsources_action.log 
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Check for existence of previous hashes file and read its content
        if [[ -f "signatures/signature_history.txt" ]]; then
          prev_hashes=$(cat signatures/signature_history.txt)
        fi
        
        # Get only the first file in the signatures_to_test directory
        files=$(ls signatures_to_test | head -n 3)

        for file in $files; do
          echo "parsing signature file: $file" >> readsources_action.log
          
          # Check if the file exists in the signatures directory and if it has been changed
          if [[ ! -f "signatures/$file" ]] || ! cmp -s "signatures/$file" "signatures_to_test/$file"; then

            # Calculate hash of the new file and check if we've seen it before
            new_hash=$(sha256sum "signatures_to_test/$file" | cut -d ' ' -f 1)
            if [[ $prev_hashes == *"$new_hash"* ]]; then
              echo "File $file has been seen before, skipping" >> readsources_action.log
              continue
            fi


            # Add the new hash to the history file
            echo "adding hash $new_hash to signature file" >> readsources_action.log
            echo -e $new_hash #$file > "signatures/signature_history.txt"

            # Copy the file to the signatures directory
            cp "signatures_to_test/$file" "signatures/$file"

        
            echo "checking out new branch new-signature-$file" >> readsources_action.log
            git checkout -b new-signature-$file
            git add "signatures/$file"
            git add "signatures/signature_history.txt"

            echo "about to commit with the following files changed:" >> readsources_action.log
            git status -s >> readsources_action.log
        
            echo "adding commit and pushing branch..." >> readsources_action.log
            # If the commit operation is successful, then push the changes and create a PR
            git commit -m "[SignatureBot] Add or update signature $file and update signature history" && {
              git push origin new-signature-$file
              echo "Add or update signature $file" > pr_message
              echo "This PR adds or updates a signature:" >> pr_message
              echo "\`\`\`" >> pr_message
              cat "signatures/$file" >> pr_message
              echo "\`\`\`" >> pr_message
              echo "creating PR: '[SignatureBot] Add or update signature $file'" >> readsources_action.log
              gh pr create --title "[SignatureBot] Add or update signature $file" --body-file pr_message --head new-signature-$file --repo ${{ github.repository }} 2>&1 | tee -a readsources_action.log
            }
            git checkout main
          fi
        done
        echo "completed read sources" >> readsources_action.log

    - name: Upload readsources.py log
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: readsources.py-log
        path: readsources.log

    - name: Upload read-sources action log
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: read-sources-action-log
        path: readsources_action.log

